import { collection, getDocs, serverTimestamp } from "firebase/firestore";
import { FIREBASE_DB } from "../firebaseConfig";
import { doc, getDoc, addDoc, deleteDoc, updateDoc } from "firebase/firestore";

/*
  UsersService is a collection of functions that interact with the Firestore database
*/

// Helper function to format user data
const formatUser = (doc: any) => {
    const data = doc.data();
    return {

      // Should be Auto generated by our program 
      userId: doc.UserId, 

      // Part of mandatory field
      username: data.username, 

      // Part of optional fields so may not have anything 
      description: data.description || "No description created yet!", 
      profilePicture: data.profilePicture || null,
    };
  };

/*
  Retrieves a user by their user ID from Firestore.
  Returns a user object if the user exists, otherwise returns null.
*/
export async function getUserByID(userId: string) {
  try {
    const userDoc = doc(FIREBASE_DB, "users", userId);
    const userSnapshot = await getDoc(userDoc);
  
    if (userSnapshot.exists()) {
      return formatUser(userSnapshot); 
    } else {
      console.warn(`User with ID ${userId} not found.`);
      return null;
    }
    
  } catch (error) {
      console.error(`Error fetching user with ID ${userId}:`, error);
      return null;
  }
}

/*
  Update an Existing User
  Source URL: https://firebase.google.com/docs/firestore/manage-data/add-data
*/
export async function updateExistingUser(id: string, updateThese: any) {
  try {
    await updateDoc(doc(FIREBASE_DB, "users", id), updateThese);
    console.log(`Successfully updated user id number ${id} and its data fields of`, updateThese);

  } catch (error) {
    console.error("This user does not exist!!", error);
  }
}
